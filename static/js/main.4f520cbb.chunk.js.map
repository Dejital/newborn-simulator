{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["style","h1","paddingTop","input","marginBottom","button","Weight","props","Input","label","value","Math","round","weight","Age","hours","Stamina","GetStaminaDisplay","stamina","ChangeDiaper","Button","onClick","loading","color","diaperFullness","disabled","GetPoopinessLabel","Sleep","isSleeping","Analytics","Container","Header","as","analytics","ouncesFed","diapersChanged","StringConstants","GetMoodDisplay","mood","AppView","age","place","hunger","onBreastFeed","onBottleFeed","onHoldBaby","onCrib","onChangeDiaper","onSleep","isBreastFeeding","isBottleFeeding","isChangingDiaper","textAlign","Subheader","Grid","columns","Column","content","error","attached","toggle","active","display","App","useState","setAge","setWeight","setPlace","breastmilk","setBreastmilk","breastmilkCapacity","setBreastmilkCapacity","setIsBreastFeeding","setIsBottleFeeding","setIsChangingDiaper","setMood","setDiaperFullness","setHunger","setStamina","setIsSleeping","setAnalytics","useEffect","timeout","setTimeout","newBreastmilk","min","max","moodAdjust","random","diaperDeposit","floor","staminaLoss","clearTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4f520cbb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nimport { Container, Grid, Header, Input, Button } from 'semantic-ui-react';\n\nconst style = {\n  h1: {\n    paddingTop: '3em'\n  },\n  input: {\n    marginBottom: '0.5em'\n  },\n  button: {\n    marginBottom: '0em'\n  }\n};\n\nconst Weight = (props) => (\n  <Input style={style.input} label='Weight' value={`${(Math.round(props.weight * 10) / 10)} oz`} />\n);\n\nconst Age = (props) => (\n  <Input style={style.input} label='Age' value={`${(Math.round(props.hours * 100) / 100)} hrs`} />\n);\n\nconst Place = (props) => (\n  <Input style={style.input} label='Place' value={props.place} />\n);\n\nconst Stamina = (props) => (\n  <Input style={style.input} label='Stamina' value={GetStaminaDisplay(props.stamina)} />\n);\n\nfunction GetStaminaDisplay(stamina) {\n  if (stamina > 30) {\n    return 'Active';\n  } else if (stamina > 10) {\n    return 'Growing tired';\n  }\n  return 'Exhausted';\n}\n\nfunction GetPoopinessColor(diaperFullness) {\n  if (diaperFullness > 70) {\n    return 'brown';\n  } else if (diaperFullness > 30) {\n    return 'yellow';\n  }\n  return null;\n}\n\nfunction GetPoopinessLabel(diaperFullness) {\n  if (diaperFullness > 70) {\n    return '💩Change Diaper';\n  }\n  return '🧷Change Diaper';\n}\n\nconst ChangeDiaper = (props) => (\n  <Button style={style.button} onClick={props.onClick} loading={props.loading} color={GetPoopinessColor(props.diaperFullness)} disabled={props.disabled}>\n    {GetPoopinessLabel(props.diaperFullness)}\n  </Button>\n);\n\nconst Sleep = (props) => (\n  <Button style={style.button} disabled={props.disabled} onClick={props.onClick}>⏰{props.isSleeping ? 'Wake' : 'Sleep'}</Button>\n);\n\nconst Analytics = (props) => (\n  <Container>\n    <Header as='h3'>History</Header>\n    <p>🥛Ounces fed: {(Math.round(props.analytics.ouncesFed * 100) / 100)}</p>\n    <p>🗑️Diapers changed: {props.analytics.diapersChanged}</p>\n  </Container>\n);\n\nconst StringConstants = {\n  crib: '🛌Crib',\n  held: '👶Held',\n};\n\nfunction GetMoodDisplay(mood) {\n  if (mood > 80) {\n    return '😊Happy';\n  } else if (mood > 50) {\n    return '😗OK';\n  } else if (mood > 25) {\n    return '😔Fussy';\n  } else if (mood > 10) {\n    return '😡Angry';\n  } else {\n    return '🤬Extreme';\n  }\n\n  return '😢Crying';\n  return '😭Screaming';\n  return '😪Sleepy';\n  return '😴Sleeping';\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n// TODO: Stamina doesn't seem to go up when you're sleeping\n// TODO: Weight needs to go up realistically\n// TODO: Over feeding should have some consequence\n// TODO: Need some indicator of how full/empty breasts are\n// TODO: Weight needs to go down if not fed\n// TODO: You need a Game Over screen with Score\n// TODO: Keep track of weight gained in Stats\n// TODO: Add an About page/modal and link back to my site\n// TODO: Build the app and deploy via Github\n\nfunction App() {\n  const agePerTick = 0.2; // Essentially the \"game speed\"\n\n  const [age, setAge] = useState(0);\n  const [weight, setWeight] = useState(100);\n  const [place, setPlace] = useState(StringConstants.crib);\n  const [breastmilk, setBreastmilk] = useState(0);\n  const [breastmilkCapacity, setBreastmilkCapacity] = useState(0.5);\n  const [isBreastFeeding, setIsBreastFeeding] = useState(false);\n  const [isBottleFeeding, setIsBottleFeeding] = useState(false);\n  const [isChangingDiaper, setIsChangingDiaper] = useState(false);\n  const [mood, setMood] = useState(70);\n  const [diaperFullness, setDiaperFullness] = useState(0);\n  const [hunger, setHunger] = useState(10);\n  const [stamina, setStamina] = useState(80);\n  const [isSleeping, setIsSleeping] = useState(false);\n\n  // TODO: Refactor this to useReducer, because it's a complex object\n  const [analytics, setAnalytics] = useState({ ouncesFed: 0, diapersChanged: 0 });\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      // Age the baby\n      setAge(age + agePerTick);\n\n      // Fill up breastmilk\n      if (!isBreastFeeding && breastmilk < breastmilkCapacity) {\n        const newBreastmilk = breastmilkCapacity * (breastmilkCapacity/(2/agePerTick)); // TODO: Better formula\n        setBreastmilk(Math.min(breastmilk + newBreastmilk, breastmilkCapacity));\n      }\n\n      // Change mood\n      var moodAdjust = 1;\n      // Location\n      if (place === StringConstants.held) {\n        moodAdjust += 2;\n      }\n      // Diaper\n      if (diaperFullness > 70 && !isChangingDiaper) {\n        moodAdjust -= 5;\n      } else if (diaperFullness > 30 && !isChangingDiaper) {\n        moodAdjust -= 2;\n      }\n      // Hunger\n      if (hunger > 50 && !isBottleFeeding && !isBottleFeeding) {\n        moodAdjust -= 5;\n      }\n      setMood(Math.max(Math.min(100, mood + moodAdjust), 0));\n\n      // Fill diaper\n      if (!isChangingDiaper && diaperFullness < 100 && (Math.random() < (10/(24/agePerTick)))) {\n        const diaperDeposit = getRandomInt(101);\n        setDiaperFullness(Math.min(100, diaperDeposit + diaperFullness))\n      }\n\n      // Get hungry\n      if (!isBreastFeeding && !isBottleFeeding && hunger < 100) {\n        setHunger(Math.min(100, hunger + 5));\n      }\n\n      // Parent stamina\n      const staminaDivisor = place === StringConstants.held ? 14 : 18;\n      const staminaLoss = (100/staminaDivisor) * agePerTick;\n      setStamina(Math.max(stamina - staminaLoss, 0));\n      if (stamina === 0) {\n        setPlace(StringConstants.crib);\n        setIsSleeping(true);\n      }\n\n      // Augment breastmilk capacity just a little bit (most should come from baby requirements)\n      setBreastmilkCapacity(breastmilkCapacity * 1.01);\n    }, 1000);\n\n    return () => clearTimeout(timeout);\n  });\n\n  const onBreastFeed = () => {\n    setIsBreastFeeding(true);\n    const ouncesFed = breastmilk; // TODO: Determine with formula\n    setTimeout(() => {\n      setWeight(weight + ouncesFed);\n      setBreastmilk(breastmilk - ouncesFed);\n      setAnalytics({ ...analytics, ouncesFed: analytics.ouncesFed + ouncesFed });\n      setBreastmilkCapacity(breastmilkCapacity * 1.05);\n      setMood(Math.min(mood + 25, 100));\n      setHunger(0);\n      setIsBreastFeeding(false);\n      setStamina(stamina - 1);\n    }, 2000);\n  };\n\n  const onBottleFeed = () => {\n    // TODO\n    setIsBottleFeeding(true);\n    const ouncesFed = 1;\n    setTimeout(() => {\n      setWeight(weight + ouncesFed);\n      setAnalytics({ ...analytics, ouncesFed: analytics.ouncesFed + ouncesFed });\n      setIsBottleFeeding(false);\n      setMood(Math.min(mood + 25, 100));\n      setHunger(0);\n      setStamina(stamina - 1);\n    }, 2000);\n  };\n\n  const onChangeDiaper = () => {\n    setIsChangingDiaper(true);\n    setTimeout(() => {\n      setAnalytics({ ...analytics, diapersChanged: analytics.diapersChanged + 1 });\n      setDiaperFullness(0);\n      setMood(Math.min(mood + (diaperFullness/4), 100));\n      setIsChangingDiaper(false);\n      setStamina(stamina - 1);\n    }, 2000);\n  };\n\n  const onSleep = () => {\n    setIsSleeping(!isSleeping);\n  };\n\n  return (\n    <div>\n      <AppView\n        weight={weight}\n        age={age}\n        place={place}\n        analytics={analytics}\n        mood={mood}\n        diaperFullness={diaperFullness}\n        hunger={hunger}\n        stamina={stamina}\n\n        onBreastFeed={() => onBreastFeed()}\n        onBottleFeed={() => onBottleFeed()}\n        onChangeDiaper={() => onChangeDiaper()}\n        onHoldBaby={() => setPlace(StringConstants.held)}\n        onCrib={() => setPlace(StringConstants.crib)}\n        onSleep={() => onSleep()}\n\n        isBreastFeeding={isBreastFeeding}\n        isBottleFeeding={isBottleFeeding}\n        isChangingDiaper={isChangingDiaper}\n        isSleeping={isSleeping}\n      />\n    </div>\n  );\n}\n\nfunction AppView(\n  {\n    weight,\n    age,\n    place,\n    analytics,\n    mood,\n    diaperFullness,\n    hunger,\n    stamina,\n\n    onBreastFeed,\n    onBottleFeed,\n    onHoldBaby,\n    onCrib,\n    onChangeDiaper,\n    onSleep,\n\n    isBreastFeeding,\n    isBottleFeeding,\n    isChangingDiaper,\n    isSleeping\n   }) {\n  return (\n    <Container>\n      <Header style={style.h1} textAlign='left' as='h1'>\n        👶 Newborn Sim\n        <Header.Subheader>\n          Simulating the parenting process for a newborn baby.\n        </Header.Subheader>\n        <br />\n      </Header>\n\n      <Grid columns={3}>\n        <Grid.Column>\n          <Header as='h3'>Baby</Header>\n          <Input style={style.input} label={mood <= 25 ? { content: 'Feeling', color: 'red' } : { content: 'Feeling' }} value={GetMoodDisplay(mood)} error={mood <= 25} />\n          <Weight weight={weight} />\n          <Age hours={age} />\n          <Header as='h3'>Parent</Header>\n          <Stamina stamina={stamina} />\n        </Grid.Column>\n\n        <Grid.Column>\n          <Header as='h3'>Actions</Header>\n          <Header as='h4'>Feeding</Header>\n          <Button style={style.button} onClick={onBreastFeed} loading={isBreastFeeding} disabled={isBreastFeeding || isBottleFeeding || isChangingDiaper || isSleeping || stamina === 0}>\n            🤱Breast Feed\n          </Button>\n          <Button style={style.button} onClick={onBottleFeed} loading={isBottleFeeding} disabled={isBreastFeeding || isBottleFeeding || isChangingDiaper || isSleeping || stamina === 0}>\n            🍼Bottle Feed\n          </Button>\n          <br />\n          <Header as='h4'>Diapers</Header>\n          <ChangeDiaper onClick={onChangeDiaper} loading={isChangingDiaper} diaperFullness={diaperFullness} disabled={isBreastFeeding || isBottleFeeding || isChangingDiaper || isSleeping || stamina === 0} />\n          <br />\n          <Header as='h4'>Placement</Header>\n          <Button onClick={onHoldBaby} attached='left' toggle active={place == StringConstants.held} disabled={isSleeping || stamina === 0}>👶Hold Baby</Button>\n          <Button onClick={onCrib} attached='right' toggle active={place == StringConstants.crib} disabled={isSleeping || stamina === 0}>{StringConstants.crib}</Button>\n          <br />\n          <Header as='h4'>Parent</Header>\n          <Sleep onClick={onSleep} isSleeping={isSleeping} disabled={place === StringConstants.held} />\n        </Grid.Column>\n\n        <Grid.Column>\n          <Analytics analytics={analytics} />\n          <br />\n          <Container style={{ display: 'none' }}>\n            <Header as='h3'>Debug</Header>\n            <p>Mood: {mood}</p>\n            <p>Diaper: {diaperFullness}</p>\n            <p>Hunger: {hunger}</p>\n          </Container>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nAppView.propTypes = {\n  weight: PropTypes.number,\n  age: PropTypes.number,\n  place: PropTypes.string,\n  analytics: PropTypes.shape({\n    ouncesFed: PropTypes.number,\n    diapersChanged: PropTypes.number\n  }),\n  mood: PropTypes.number,\n  diaperFullness: PropTypes.number,\n  hunger: PropTypes.number,\n  stamina: PropTypes.number,\n\n  onBreastFeed: PropTypes.func,\n  onBottleFeed: PropTypes.func,\n  onHoldBaby: PropTypes.func,\n  onCrib: PropTypes.func,\n  onSleep: PropTypes.func,\n\n  isBreastFeeding: PropTypes.bool,\n  isBottleFeeding: PropTypes.bool,\n  isChangingDiaper: PropTypes.bool,\n  isSleeping: PropTypes.bool\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}